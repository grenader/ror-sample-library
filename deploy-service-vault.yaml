---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ror-vault-webapp
  labels:
    app: ror-vault
spec:
  selector:
    matchLabels:
      app: ror-vault
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "internal-app"
        vault.hashicorp.com/agent-inject-secret-database-config.properties: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config.properties: |
          {{- with secret "internal/data/database/config" -}}
          POSTGRESS_CONNECTION=postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: ror-vault
    spec:
      serviceAccountName: internal-app
      containers:
      - env:
        - name: PORT
          value: "3000"
#        envFrom:
#        - configMapRef:
#            name: bands-api
      image: grenader/ror:library3
      imagePullPolicy: IfNotPresent
      name: library3-web
      ports:
      - containerPort: 3000
        name: http
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /
          port: 3000
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 2
---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    app: ror-vault-service
#  name: ror-vault-service
#spec:
#  allocateLoadBalancerNodePorts: true
#  ports:
#    - port: 80
#      protocol: TCP
#      targetPort: 8080
#  selector:
#    app: ror-vault
#  type: LoadBalancer